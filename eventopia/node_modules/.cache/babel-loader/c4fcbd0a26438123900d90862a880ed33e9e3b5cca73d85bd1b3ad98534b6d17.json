{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\event\\\\eventopia\\\\src\\\\context\\\\EventContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventContext = /*#__PURE__*/createContext();\nexport const useEvents = () => {\n  _s();\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('useEvents must be used within an EventProvider');\n  }\n  return context;\n};\n_s(useEvents, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EventProvider = ({\n  children\n}) => {\n  _s2();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all events\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Replace with your actual API endpoint\n      const response = await fetch('/api/events');\n      if (response.ok) {\n        const eventsData = await response.json();\n        setEvents(eventsData);\n      } else {\n        throw new Error('Failed to fetch events');\n      }\n    } catch (err) {\n      console.error('Error fetching events:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new event\n  const createEvent = async eventData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(eventData)\n      });\n      if (response.ok) {\n        const newEvent = await response.json();\n        setEvents(prev => [...prev, newEvent]);\n        return {\n          success: true,\n          event: newEvent\n        };\n      } else {\n        throw new Error('Failed to create event');\n      }\n    } catch (err) {\n      console.error('Error creating event:', err);\n      setError(err.message);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an event\n  const updateEvent = async (eventId, eventData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`/api/events/${eventId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(eventData)\n      });\n      if (response.ok) {\n        const updatedEvent = await response.json();\n        setEvents(prev => prev.map(event => event.id === eventId ? updatedEvent : event));\n        return {\n          success: true,\n          event: updatedEvent\n        };\n      } else {\n        throw new Error('Failed to update event');\n      }\n    } catch (err) {\n      console.error('Error updating event:', err);\n      setError(err.message);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete an event\n  const deleteEvent = async eventId => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`/api/events/${eventId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setEvents(prev => prev.filter(event => event.id !== eventId));\n        return {\n          success: true\n        };\n      } else {\n        throw new Error('Failed to delete event');\n      }\n    } catch (err) {\n      console.error('Error deleting event:', err);\n      setError(err.message);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get a single event by ID\n  const getEventById = eventId => {\n    return events.find(event => event.id === eventId);\n  };\n\n  // Filter events by category\n  const getEventsByCategory = category => {\n    return events.filter(event => event.category === category);\n  };\n\n  // Get upcoming events\n  const getUpcomingEvents = () => {\n    const now = new Date();\n    return events.filter(event => new Date(event.date) >= now);\n  };\n\n  // Initialize events on mount\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const value = {\n    events,\n    loading,\n    error,\n    fetchEvents,\n    createEvent,\n    updateEvent,\n    deleteEvent,\n    getEventById,\n    getEventsByCategory,\n    getUpcomingEvents\n  };\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s2(EventProvider, \"IypEFUpYSOCpKPwAV3AhILeIRe0=\");\n_c = EventProvider;\nexport default EventContext;\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","EventContext","useEvents","_s","context","Error","EventProvider","children","_s2","events","setEvents","loading","setLoading","error","setError","fetchEvents","response","fetch","ok","eventsData","json","err","console","message","createEvent","eventData","method","headers","body","JSON","stringify","newEvent","prev","success","event","updateEvent","eventId","updatedEvent","map","id","deleteEvent","filter","getEventById","find","getEventsByCategory","category","getUpcomingEvents","now","Date","date","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/event/eventopia/src/context/EventContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst EventContext = createContext();\r\n\r\nexport const useEvents = () => {\r\n  const context = useContext(EventContext);\r\n  if (!context) {\r\n    throw new Error('useEvents must be used within an EventProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const EventProvider = ({ children }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all events\r\n  const fetchEvents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Replace with your actual API endpoint\r\n      const response = await fetch('/api/events');\r\n      \r\n      if (response.ok) {\r\n        const eventsData = await response.json();\r\n        setEvents(eventsData);\r\n      } else {\r\n        throw new Error('Failed to fetch events');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching events:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Create a new event\r\n  const createEvent = async (eventData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/events', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(eventData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newEvent = await response.json();\r\n        setEvents(prev => [...prev, newEvent]);\r\n        return { success: true, event: newEvent };\r\n      } else {\r\n        throw new Error('Failed to create event');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating event:', err);\r\n      setError(err.message);\r\n      return { success: false, error: err.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update an event\r\n  const updateEvent = async (eventId, eventData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/events/${eventId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(eventData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedEvent = await response.json();\r\n        setEvents(prev => \r\n          prev.map(event => \r\n            event.id === eventId ? updatedEvent : event\r\n          )\r\n        );\r\n        return { success: true, event: updatedEvent };\r\n      } else {\r\n        throw new Error('Failed to update event');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating event:', err);\r\n      setError(err.message);\r\n      return { success: false, error: err.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete an event\r\n  const deleteEvent = async (eventId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/events/${eventId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        setEvents(prev => prev.filter(event => event.id !== eventId));\r\n        return { success: true };\r\n      } else {\r\n        throw new Error('Failed to delete event');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting event:', err);\r\n      setError(err.message);\r\n      return { success: false, error: err.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get a single event by ID\r\n  const getEventById = (eventId) => {\r\n    return events.find(event => event.id === eventId);\r\n  };\r\n\r\n  // Filter events by category\r\n  const getEventsByCategory = (category) => {\r\n    return events.filter(event => event.category === category);\r\n  };\r\n\r\n  // Get upcoming events\r\n  const getUpcomingEvents = () => {\r\n    const now = new Date();\r\n    return events.filter(event => new Date(event.date) >= now);\r\n  };\r\n\r\n  // Initialize events on mount\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const value = {\r\n    events,\r\n    loading,\r\n    error,\r\n    fetchEvents,\r\n    createEvent,\r\n    updateEvent,\r\n    deleteEvent,\r\n    getEventById,\r\n    getEventsByCategory,\r\n    getUpcomingEvents,\r\n  };\r\n\r\n  return (\r\n    <EventContext.Provider value={value}>\r\n      {children}\r\n    </EventContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EventContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}